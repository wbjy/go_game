// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: protodefine/client/client.proto

package client

import (
	proto "github.com/golang/protobuf/proto"
	mytype "go_game/protodefine/mytype"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CMDID_Client int32

const (
	CMDID_Client_IDUnknow           CMDID_Client = 0  //0保留
	CMDID_Client_IDLoginReq         CMDID_Client = 1  //登录请求
	CMDID_Client_IDLoginRsp         CMDID_Client = 2  //登录回复
	CMDID_Client_IDLogoutReq        CMDID_Client = 3  //注销登录请求
	CMDID_Client_IDLogoutRsp        CMDID_Client = 4  //注销登录回复
	CMDID_Client_IDQueryFundReq     CMDID_Client = 10 //查询财富请求
	CMDID_Client_IDQueryFundRsp     CMDID_Client = 11 //查询财富回复
	CMDID_Client_IDGetOnlineUserReq CMDID_Client = 80 //获取onlie的用户列表请求
	CMDID_Client_IDGetOnlineUserRsp CMDID_Client = 81 //获取onlie的用户列表回复
	CMDID_Client_IDKickUserReq      CMDID_Client = 82 //踢掉用户的请求
	CMDID_Client_IDKickUserRsp      CMDID_Client = 83 //踢掉用户的回复
	CMDID_Client_IDTestRouter       CMDID_Client = 90 //测试router负载能力
	CMDID_Client_IDLast             CMDID_Client = 100
)

// Enum value maps for CMDID_Client.
var (
	CMDID_Client_name = map[int32]string{
		0:   "IDUnknow",
		1:   "IDLoginReq",
		2:   "IDLoginRsp",
		3:   "IDLogoutReq",
		4:   "IDLogoutRsp",
		10:  "IDQueryFundReq",
		11:  "IDQueryFundRsp",
		80:  "IDGetOnlineUserReq",
		81:  "IDGetOnlineUserRsp",
		82:  "IDKickUserReq",
		83:  "IDKickUserRsp",
		90:  "IDTestRouter",
		100: "IDLast",
	}
	CMDID_Client_value = map[string]int32{
		"IDUnknow":           0,
		"IDLoginReq":         1,
		"IDLoginRsp":         2,
		"IDLogoutReq":        3,
		"IDLogoutRsp":        4,
		"IDQueryFundReq":     10,
		"IDQueryFundRsp":     11,
		"IDGetOnlineUserReq": 80,
		"IDGetOnlineUserRsp": 81,
		"IDKickUserReq":      82,
		"IDKickUserRsp":      83,
		"IDTestRouter":       90,
		"IDLast":             100,
	}
)

func (x CMDID_Client) Enum() *CMDID_Client {
	p := new(CMDID_Client)
	*p = x
	return p
}

func (x CMDID_Client) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMDID_Client) Descriptor() protoreflect.EnumDescriptor {
	return file_protodefine_client_client_proto_enumTypes[0].Descriptor()
}

func (CMDID_Client) Type() protoreflect.EnumType {
	return &file_protodefine_client_client_proto_enumTypes[0]
}

func (x CMDID_Client) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CMDID_Client.Descriptor instead.
func (CMDID_Client) EnumDescriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{0}
}

type LoginReq_LoginAction int32

const (
	LoginReq_ByAccount  LoginReq_LoginAction = 0  //账号
	LoginReq_GuestLogin LoginReq_LoginAction = 2  //游客，即快速登录
	LoginReq_ByThirdID  LoginReq_LoginAction = 4  //第三方ID
	LoginReq_Robot      LoginReq_LoginAction = 10 //机器人
)

// Enum value maps for LoginReq_LoginAction.
var (
	LoginReq_LoginAction_name = map[int32]string{
		0:  "ByAccount",
		2:  "GuestLogin",
		4:  "ByThirdID",
		10: "Robot",
	}
	LoginReq_LoginAction_value = map[string]int32{
		"ByAccount":  0,
		"GuestLogin": 2,
		"ByThirdID":  4,
		"Robot":      10,
	}
)

func (x LoginReq_LoginAction) Enum() *LoginReq_LoginAction {
	p := new(LoginReq_LoginAction)
	*p = x
	return p
}

func (x LoginReq_LoginAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginReq_LoginAction) Descriptor() protoreflect.EnumDescriptor {
	return file_protodefine_client_client_proto_enumTypes[1].Descriptor()
}

func (LoginReq_LoginAction) Type() protoreflect.EnumType {
	return &file_protodefine_client_client_proto_enumTypes[1]
}

func (x LoginReq_LoginAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginReq_LoginAction.Descriptor instead.
func (LoginReq_LoginAction) EnumDescriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{0, 0}
}

type LoginReq_ClientOS int32

const (
	LoginReq_UNKWON       LoginReq_ClientOS = 0
	LoginReq_PC           LoginReq_ClientOS = 1 //这里指的是WIN7和XP
	LoginReq_IOS_AppStore LoginReq_ClientOS = 2
	LoginReq_Android      LoginReq_ClientOS = 4
	LoginReq_IOS_Breaked  LoginReq_ClientOS = 8  //越狱版IOS
	LoginReq_WIN10        LoginReq_ClientOS = 16 //WIN10
)

// Enum value maps for LoginReq_ClientOS.
var (
	LoginReq_ClientOS_name = map[int32]string{
		0:  "UNKWON",
		1:  "PC",
		2:  "IOS_AppStore",
		4:  "Android",
		8:  "IOS_Breaked",
		16: "WIN10",
	}
	LoginReq_ClientOS_value = map[string]int32{
		"UNKWON":       0,
		"PC":           1,
		"IOS_AppStore": 2,
		"Android":      4,
		"IOS_Breaked":  8,
		"WIN10":        16,
	}
)

func (x LoginReq_ClientOS) Enum() *LoginReq_ClientOS {
	p := new(LoginReq_ClientOS)
	*p = x
	return p
}

func (x LoginReq_ClientOS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginReq_ClientOS) Descriptor() protoreflect.EnumDescriptor {
	return file_protodefine_client_client_proto_enumTypes[2].Descriptor()
}

func (LoginReq_ClientOS) Type() protoreflect.EnumType {
	return &file_protodefine_client_client_proto_enumTypes[2]
}

func (x LoginReq_ClientOS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginReq_ClientOS.Descriptor instead.
func (LoginReq_ClientOS) EnumDescriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{0, 1}
}

//游客登录
type LoginReq_NetworkType int32

const (
	LoginReq_UNKWONType LoginReq_NetworkType = 0
	LoginReq_DIANXIN    LoginReq_NetworkType = 1 //电信
	LoginReq_YIDONG     LoginReq_NetworkType = 2 //移动
	LoginReq_LIANTONG   LoginReq_NetworkType = 3 //联通
	LoginReq_WIFI       LoginReq_NetworkType = 4 //WIFI
)

// Enum value maps for LoginReq_NetworkType.
var (
	LoginReq_NetworkType_name = map[int32]string{
		0: "UNKWONType",
		1: "DIANXIN",
		2: "YIDONG",
		3: "LIANTONG",
		4: "WIFI",
	}
	LoginReq_NetworkType_value = map[string]int32{
		"UNKWONType": 0,
		"DIANXIN":    1,
		"YIDONG":     2,
		"LIANTONG":   3,
		"WIFI":       4,
	}
)

func (x LoginReq_NetworkType) Enum() *LoginReq_NetworkType {
	p := new(LoginReq_NetworkType)
	*p = x
	return p
}

func (x LoginReq_NetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginReq_NetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_protodefine_client_client_proto_enumTypes[3].Descriptor()
}

func (LoginReq_NetworkType) Type() protoreflect.EnumType {
	return &file_protodefine_client_client_proto_enumTypes[3]
}

func (x LoginReq_NetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginReq_NetworkType.Descriptor instead.
func (LoginReq_NetworkType) EnumDescriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{0, 2}
}

type LoginRsp_Result int32

const (
	LoginRsp_SUCCESS      LoginRsp_Result = 0   //成功
	LoginRsp_NOTEXIST     LoginRsp_Result = 1   //账号不存在
	LoginRsp_FROZEN       LoginRsp_Result = 2   //账号被冻结
	LoginRsp_FALSEPW      LoginRsp_Result = 3   //密码错误
	LoginRsp_NETERROR     LoginRsp_Result = 4   //网络异常
	LoginRsp_APPISBUSY    LoginRsp_Result = 5   //服务器忙，人数爆满
	LoginRsp_GUESTFORBID  LoginRsp_Result = 6   //禁止游客登录
	LoginRsp_CONNECTERROR LoginRsp_Result = 7   //连接异常
	LoginRsp_VERSIONOLD   LoginRsp_Result = 8   //版本过低，需要升级客户端
	LoginRsp_FREQUENTLY   LoginRsp_Result = 10  //所在IP登录次数过多
	LoginRsp_SERVERERROR  LoginRsp_Result = 255 //服务器其他异常错误
)

// Enum value maps for LoginRsp_Result.
var (
	LoginRsp_Result_name = map[int32]string{
		0:   "SUCCESS",
		1:   "NOTEXIST",
		2:   "FROZEN",
		3:   "FALSEPW",
		4:   "NETERROR",
		5:   "APPISBUSY",
		6:   "GUESTFORBID",
		7:   "CONNECTERROR",
		8:   "VERSIONOLD",
		10:  "FREQUENTLY",
		255: "SERVERERROR",
	}
	LoginRsp_Result_value = map[string]int32{
		"SUCCESS":      0,
		"NOTEXIST":     1,
		"FROZEN":       2,
		"FALSEPW":      3,
		"NETERROR":     4,
		"APPISBUSY":    5,
		"GUESTFORBID":  6,
		"CONNECTERROR": 7,
		"VERSIONOLD":   8,
		"FREQUENTLY":   10,
		"SERVERERROR":  255,
	}
)

func (x LoginRsp_Result) Enum() *LoginRsp_Result {
	p := new(LoginRsp_Result)
	*p = x
	return p
}

func (x LoginRsp_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginRsp_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_protodefine_client_client_proto_enumTypes[4].Descriptor()
}

func (LoginRsp_Result) Type() protoreflect.EnumType {
	return &file_protodefine_client_client_proto_enumTypes[4]
}

func (x LoginRsp_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginRsp_Result.Descriptor instead.
func (LoginRsp_Result) EnumDescriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{1, 0}
}

type TestRouter_Result int32

const (
	TestRouter_UNKWON      TestRouter_Result = 0
	TestRouter_SUCCESS     TestRouter_Result = 1   //
	TestRouter_NOTEXIST    TestRouter_Result = 2   //
	TestRouter_FROZEN      TestRouter_Result = 3   //
	TestRouter_FREQUENTLY  TestRouter_Result = 4   //
	TestRouter_APPISBUSY   TestRouter_Result = 5   //
	TestRouter_GUESTFORBID TestRouter_Result = 6   //
	TestRouter_APPINITING  TestRouter_Result = 7   //
	TestRouter_VERSIONOLD  TestRouter_Result = 8   //
	TestRouter_NOMOREGUEST TestRouter_Result = 9   //
	TestRouter_SERVERERROR TestRouter_Result = 255 //
)

// Enum value maps for TestRouter_Result.
var (
	TestRouter_Result_name = map[int32]string{
		0:   "UNKWON",
		1:   "SUCCESS",
		2:   "NOTEXIST",
		3:   "FROZEN",
		4:   "FREQUENTLY",
		5:   "APPISBUSY",
		6:   "GUESTFORBID",
		7:   "APPINITING",
		8:   "VERSIONOLD",
		9:   "NOMOREGUEST",
		255: "SERVERERROR",
	}
	TestRouter_Result_value = map[string]int32{
		"UNKWON":      0,
		"SUCCESS":     1,
		"NOTEXIST":    2,
		"FROZEN":      3,
		"FREQUENTLY":  4,
		"APPISBUSY":   5,
		"GUESTFORBID": 6,
		"APPINITING":  7,
		"VERSIONOLD":  8,
		"NOMOREGUEST": 9,
		"SERVERERROR": 255,
	}
)

func (x TestRouter_Result) Enum() *TestRouter_Result {
	p := new(TestRouter_Result)
	*p = x
	return p
}

func (x TestRouter_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestRouter_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_protodefine_client_client_proto_enumTypes[5].Descriptor()
}

func (TestRouter_Result) Type() protoreflect.EnumType {
	return &file_protodefine_client_client_proto_enumTypes[5]
}

func (x TestRouter_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestRouter_Result.Descriptor instead.
func (TestRouter_Result) EnumDescriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{2, 0}
}

///Normal登出回复或AnotherLogin登出通知
type LogoutRsp_LogoutReason int32

const (
	LogoutRsp_Normal       LogoutRsp_LogoutReason = 0
	LogoutRsp_AnotherLogin LogoutRsp_LogoutReason = 1 //
)

// Enum value maps for LogoutRsp_LogoutReason.
var (
	LogoutRsp_LogoutReason_name = map[int32]string{
		0: "Normal",
		1: "AnotherLogin",
	}
	LogoutRsp_LogoutReason_value = map[string]int32{
		"Normal":       0,
		"AnotherLogin": 1,
	}
)

func (x LogoutRsp_LogoutReason) Enum() *LogoutRsp_LogoutReason {
	p := new(LogoutRsp_LogoutReason)
	*p = x
	return p
}

func (x LogoutRsp_LogoutReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogoutRsp_LogoutReason) Descriptor() protoreflect.EnumDescriptor {
	return file_protodefine_client_client_proto_enumTypes[6].Descriptor()
}

func (LogoutRsp_LogoutReason) Type() protoreflect.EnumType {
	return &file_protodefine_client_client_proto_enumTypes[6]
}

func (x LogoutRsp_LogoutReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogoutRsp_LogoutReason.Descriptor instead.
func (LogoutRsp_LogoutReason) EnumDescriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{4, 0}
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base          *mytype.BaseInfo     `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	GameKind      uint32               `protobuf:"varint,2,opt,name=game_kind,json=gameKind,proto3" json:"game_kind,omitempty"`                                           //游戏种类
	ActionType    LoginReq_LoginAction `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3,enum=bs.client.LoginReq_LoginAction" json:"action_type,omitempty"` //登录类型
	ClientOs      LoginReq_ClientOS    `protobuf:"varint,4,opt,name=client_os,json=clientOs,proto3,enum=bs.client.LoginReq_ClientOS" json:"client_os,omitempty"`          //客户端操作系统类型
	LoginAccount  string               `protobuf:"bytes,7,opt,name=login_account,json=loginAccount,proto3" json:"login_account,omitempty"`                                //用户账号
	LoginPassword string               `protobuf:"bytes,8,opt,name=login_password,json=loginPassword,proto3" json:"login_password,omitempty"`                             //用户密码
	ClientVersion string               `protobuf:"bytes,9,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`                             //客户端版本号
	Client_IP     string               `protobuf:"bytes,10,opt,name=client_IP,json=clientIP,proto3" json:"client_IP,omitempty"`                                           //客户端IP
	SystemVersion string               `protobuf:"bytes,11,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`                            //操作系统版本号
	LogonToken    uint32               `protobuf:"varint,21,opt,name=logon_token,json=logonToken,proto3" json:"logon_token,omitempty"`                                    //登录令牌
	MobileCode    string               `protobuf:"bytes,22,opt,name=mobile_code,json=mobileCode,proto3" json:"mobile_code,omitempty"`                                     //
	OsVersion     string               `protobuf:"bytes,23,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`                                        //
	SpId          LoginReq_NetworkType `protobuf:"varint,24,opt,name=sp_id,json=spId,proto3,enum=bs.client.LoginReq_NetworkType" json:"sp_id,omitempty"`                  //
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{0}
}

func (x *LoginReq) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LoginReq) GetGameKind() uint32 {
	if x != nil {
		return x.GameKind
	}
	return 0
}

func (x *LoginReq) GetActionType() LoginReq_LoginAction {
	if x != nil {
		return x.ActionType
	}
	return LoginReq_ByAccount
}

func (x *LoginReq) GetClientOs() LoginReq_ClientOS {
	if x != nil {
		return x.ClientOs
	}
	return LoginReq_UNKWON
}

func (x *LoginReq) GetLoginAccount() string {
	if x != nil {
		return x.LoginAccount
	}
	return ""
}

func (x *LoginReq) GetLoginPassword() string {
	if x != nil {
		return x.LoginPassword
	}
	return ""
}

func (x *LoginReq) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *LoginReq) GetClient_IP() string {
	if x != nil {
		return x.Client_IP
	}
	return ""
}

func (x *LoginReq) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *LoginReq) GetLogonToken() uint32 {
	if x != nil {
		return x.LogonToken
	}
	return 0
}

func (x *LoginReq) GetMobileCode() string {
	if x != nil {
		return x.MobileCode
	}
	return ""
}

func (x *LoginReq) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *LoginReq) GetSpId() LoginReq_NetworkType {
	if x != nil {
		return x.SpId
	}
	return LoginReq_UNKWONType
}

type LoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *mytype.BaseInfo        `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	LoginResult    LoginRsp_Result         `protobuf:"varint,2,opt,name=login_result,json=loginResult,proto3,enum=bs.client.LoginRsp_Result" json:"login_result,omitempty"` //登录结果
	LoginInfo      string                  `protobuf:"bytes,3,opt,name=login_info,json=loginInfo,proto3" json:"login_info,omitempty"`                                       //登录失败后的提示信息
	UserBaseInfo   *mytype.BaseUserInfo    `protobuf:"bytes,4,opt,name=user_base_info,json=userBaseInfo,proto3" json:"user_base_info,omitempty"`                            //登录成功后收到的用户基本信息
	UserSesionInfo *mytype.UserSessionInfo `protobuf:"bytes,5,opt,name=user_sesion_info,json=userSesionInfo,proto3" json:"user_sesion_info,omitempty"`                      //用户的连接信息
	UserId         uint64                  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                               //用户id
}

func (x *LoginRsp) Reset() {
	*x = LoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRsp) ProtoMessage() {}

func (x *LoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRsp.ProtoReflect.Descriptor instead.
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{1}
}

func (x *LoginRsp) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LoginRsp) GetLoginResult() LoginRsp_Result {
	if x != nil {
		return x.LoginResult
	}
	return LoginRsp_SUCCESS
}

func (x *LoginRsp) GetLoginInfo() string {
	if x != nil {
		return x.LoginInfo
	}
	return ""
}

func (x *LoginRsp) GetUserBaseInfo() *mytype.BaseUserInfo {
	if x != nil {
		return x.UserBaseInfo
	}
	return nil
}

func (x *LoginRsp) GetUserSesionInfo() *mytype.UserSessionInfo {
	if x != nil {
		return x.UserSesionInfo
	}
	return nil
}

func (x *LoginRsp) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

//就测试用的，字段随便乱写
type TestRouter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *mytype.BaseInfo        `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	LoginResult TestRouter_Result       `protobuf:"varint,2,opt,name=login_result,json=loginResult,proto3,enum=bs.client.TestRouter_Result" json:"login_result,omitempty"` //
	LoginInfo   string                  `protobuf:"bytes,3,opt,name=login_info,json=loginInfo,proto3" json:"login_info,omitempty"`                                         //
	BaseInfo    *mytype.BaseUserInfo    `protobuf:"bytes,4,opt,name=base_info,json=baseInfo,proto3" json:"base_info,omitempty"`                                            //
	SessionInfo *mytype.UserSessionInfo `protobuf:"bytes,5,opt,name=session_info,json=sessionInfo,proto3" json:"session_info,omitempty"`                                   //
	UserId      uint64                  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                 //
	Tips        string                  `protobuf:"bytes,7,opt,name=tips,proto3" json:"tips,omitempty"`                                                                    //
}

func (x *TestRouter) Reset() {
	*x = TestRouter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRouter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRouter) ProtoMessage() {}

func (x *TestRouter) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRouter.ProtoReflect.Descriptor instead.
func (*TestRouter) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{2}
}

func (x *TestRouter) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *TestRouter) GetLoginResult() TestRouter_Result {
	if x != nil {
		return x.LoginResult
	}
	return TestRouter_UNKWON
}

func (x *TestRouter) GetLoginInfo() string {
	if x != nil {
		return x.LoginInfo
	}
	return ""
}

func (x *TestRouter) GetBaseInfo() *mytype.BaseUserInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *TestRouter) GetSessionInfo() *mytype.UserSessionInfo {
	if x != nil {
		return x.SessionInfo
	}
	return nil
}

func (x *TestRouter) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TestRouter) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *mytype.BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserId uint64           `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{3}
}

func (x *LogoutReq) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LogoutReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LogoutRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base         *mytype.BaseInfo       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	LogoutReason LogoutRsp_LogoutReason `protobuf:"varint,2,opt,name=logout_reason,json=logoutReason,proto3,enum=bs.client.LogoutRsp_LogoutReason" json:"logout_reason,omitempty"`
	ReasonInfo   string                 `protobuf:"bytes,3,opt,name=reason_info,json=reasonInfo,proto3" json:"reason_info,omitempty"`
}

func (x *LogoutRsp) Reset() {
	*x = LogoutRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRsp) ProtoMessage() {}

func (x *LogoutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRsp.ProtoReflect.Descriptor instead.
func (*LogoutRsp) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{4}
}

func (x *LogoutRsp) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LogoutRsp) GetLogoutReason() LogoutRsp_LogoutReason {
	if x != nil {
		return x.LogoutReason
	}
	return LogoutRsp_Normal
}

func (x *LogoutRsp) GetReasonInfo() string {
	if x != nil {
		return x.ReasonInfo
	}
	return ""
}

type QueryFundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *mytype.BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	FundType uint32           `protobuf:"varint,2,opt,name=fund_type,json=fundType,proto3" json:"fund_type,omitempty"`
	UserId   uint64           `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *QueryFundReq) Reset() {
	*x = QueryFundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFundReq) ProtoMessage() {}

func (x *QueryFundReq) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFundReq.ProtoReflect.Descriptor instead.
func (*QueryFundReq) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{5}
}

func (x *QueryFundReq) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *QueryFundReq) GetFundType() uint32 {
	if x != nil {
		return x.FundType
	}
	return 0
}

func (x *QueryFundReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QueryFundRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *mytype.BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserId uint64           `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id
	//
	ChangeReason uint32             `protobuf:"varint,3,opt,name=change_reason,json=changeReason,proto3" json:"change_reason,omitempty"` //变化原因
	ChangeInfo   string             `protobuf:"bytes,4,opt,name=change_info,json=changeInfo,proto3" json:"change_info,omitempty"`        //变化说明
	FundItems    []*mytype.FundItem `protobuf:"bytes,5,rep,name=fund_items,json=fundItems,proto3" json:"fund_items,omitempty"`
}

func (x *QueryFundRsp) Reset() {
	*x = QueryFundRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFundRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFundRsp) ProtoMessage() {}

func (x *QueryFundRsp) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFundRsp.ProtoReflect.Descriptor instead.
func (*QueryFundRsp) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{6}
}

func (x *QueryFundRsp) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *QueryFundRsp) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *QueryFundRsp) GetChangeReason() uint32 {
	if x != nil {
		return x.ChangeReason
	}
	return 0
}

func (x *QueryFundRsp) GetChangeInfo() string {
	if x != nil {
		return x.ChangeInfo
	}
	return ""
}

func (x *QueryFundRsp) GetFundItems() []*mytype.FundItem {
	if x != nil {
		return x.FundItems
	}
	return nil
}

type GetOnlineUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *mytype.BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CheckString string           `protobuf:"bytes,2,opt,name=check_string,json=checkString,proto3" json:"check_string,omitempty"` //
	UserId      uint64           `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetOnlineUserReq) Reset() {
	*x = GetOnlineUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineUserReq) ProtoMessage() {}

func (x *GetOnlineUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineUserReq.ProtoReflect.Descriptor instead.
func (*GetOnlineUserReq) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{7}
}

func (x *GetOnlineUserReq) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetOnlineUserReq) GetCheckString() string {
	if x != nil {
		return x.CheckString
	}
	return ""
}

func (x *GetOnlineUserReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetOnlineUserRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *mytype.BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	//repeated OnlineUserInfo user_info_array=2;
	//repeated OnlineAPPInfo app_info_array=3;
	Result bool `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetOnlineUserRsp) Reset() {
	*x = GetOnlineUserRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineUserRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineUserRsp) ProtoMessage() {}

func (x *GetOnlineUserRsp) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineUserRsp.ProtoReflect.Descriptor instead.
func (*GetOnlineUserRsp) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{8}
}

func (x *GetOnlineUserRsp) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetOnlineUserRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type KickUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *mytype.BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CheckString string           `protobuf:"bytes,2,opt,name=check_string,json=checkString,proto3" json:"check_string,omitempty"`           //验证串
	ArrayUserId []uint64         `protobuf:"varint,3,rep,packed,name=array_user_id,json=arrayUserId,proto3" json:"array_user_id,omitempty"` //用户组
	OpUserId    uint64           `protobuf:"varint,4,opt,name=op_user_id,json=opUserId,proto3" json:"op_user_id,omitempty"`                 //操作用户
}

func (x *KickUserReq) Reset() {
	*x = KickUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserReq) ProtoMessage() {}

func (x *KickUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserReq.ProtoReflect.Descriptor instead.
func (*KickUserReq) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{9}
}

func (x *KickUserReq) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *KickUserReq) GetCheckString() string {
	if x != nil {
		return x.CheckString
	}
	return ""
}

func (x *KickUserReq) GetArrayUserId() []uint64 {
	if x != nil {
		return x.ArrayUserId
	}
	return nil
}

func (x *KickUserReq) GetOpUserId() uint64 {
	if x != nil {
		return x.OpUserId
	}
	return 0
}

type KickUserRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *mytype.BaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	IsOk bool             `protobuf:"varint,2,opt,name=is_ok,json=isOk,proto3" json:"is_ok,omitempty"` //true成功false失败
}

func (x *KickUserRsp) Reset() {
	*x = KickUserRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodefine_client_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickUserRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserRsp) ProtoMessage() {}

func (x *KickUserRsp) ProtoReflect() protoreflect.Message {
	mi := &file_protodefine_client_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserRsp.ProtoReflect.Descriptor instead.
func (*KickUserRsp) Descriptor() ([]byte, []int) {
	return file_protodefine_client_client_proto_rawDescGZIP(), []int{10}
}

func (x *KickUserRsp) GetBase() *mytype.BaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *KickUserRsp) GetIsOk() bool {
	if x != nil {
		return x.IsOk
	}
	return false
}

var File_protodefine_client_client_proto protoreflect.FileDescriptor

var file_protodefine_client_client_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x1e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2f, 0x6d, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x06, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x40,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f,
	0x53, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x50, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x73, 0x70, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0b, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x79, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x49, 0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x10,
	0x0a, 0x22, 0x59, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x53, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x4e, 0x4b, 0x57, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x43, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4f, 0x53, 0x5f, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x04,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4f, 0x53, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x64, 0x10,
	0x08, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x49, 0x4e, 0x31, 0x30, 0x10, 0x10, 0x22, 0x4e, 0x0a, 0x0b,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x55,
	0x4e, 0x4b, 0x57, 0x4f, 0x4e, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x49, 0x41, 0x4e, 0x58, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x49, 0x44, 0x4f,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x47,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x49, 0x46, 0x49, 0x10, 0x04, 0x22, 0xdd, 0x03, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3c, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x50, 0x57, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45,
	0x54, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x49,
	0x53, 0x42, 0x55, 0x53, 0x59, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x55, 0x45, 0x53, 0x54,
	0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x45,
	0x52, 0x53, 0x49, 0x4f, 0x4e, 0x4f, 0x4c, 0x44, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x4e, 0x54, 0x4c, 0x59, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0x01, 0x22, 0xe5, 0x03, 0x0a,
	0x0a, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x73, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x69, 0x70, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x57, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x54, 0x4c, 0x59, 0x10,
	0x04, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x49, 0x53, 0x42, 0x55, 0x53, 0x59, 0x10, 0x05,
	0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x55, 0x45, 0x53, 0x54, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x10,
	0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x4f, 0x4c, 0x44, 0x10,
	0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x4d, 0x4f, 0x52, 0x45, 0x47, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x09, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0xff, 0x01, 0x22, 0x4c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2c, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x22,
	0x6c, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc8, 0x01,
	0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x26,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62,
	0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0a, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x66,
	0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x76, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x73, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x22, 0x0a, 0x0d, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x61, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6f, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x73, 0x70,
	0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x6f,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6b, 0x2a, 0xfa, 0x01,
	0x0a, 0x0c, 0x43, 0x4d, 0x44, 0x49, 0x44, 0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x44, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x44, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x44, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x49, 0x44, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x10, 0x03, 0x12, 0x0f, 0x0a,
	0x0b, 0x49, 0x44, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x73, 0x70, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x44, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x44, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e,
	0x64, 0x52, 0x73, 0x70, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x44, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x10, 0x50, 0x12, 0x16,
	0x0a, 0x12, 0x49, 0x44, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x10, 0x51, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x44, 0x4b, 0x69, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x10, 0x52, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x44, 0x4b,
	0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x73, 0x70, 0x10, 0x53, 0x12, 0x10, 0x0a, 0x0c,
	0x49, 0x44, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x10, 0x5a, 0x12, 0x0a,
	0x0a, 0x06, 0x49, 0x44, 0x4c, 0x61, 0x73, 0x74, 0x10, 0x64, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x6f,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protodefine_client_client_proto_rawDescOnce sync.Once
	file_protodefine_client_client_proto_rawDescData = file_protodefine_client_client_proto_rawDesc
)

func file_protodefine_client_client_proto_rawDescGZIP() []byte {
	file_protodefine_client_client_proto_rawDescOnce.Do(func() {
		file_protodefine_client_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_protodefine_client_client_proto_rawDescData)
	})
	return file_protodefine_client_client_proto_rawDescData
}

var file_protodefine_client_client_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_protodefine_client_client_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_protodefine_client_client_proto_goTypes = []interface{}{
	(CMDID_Client)(0),              // 0: bs.client.CMDID_Client
	(LoginReq_LoginAction)(0),      // 1: bs.client.LoginReq.LoginAction
	(LoginReq_ClientOS)(0),         // 2: bs.client.LoginReq.ClientOS
	(LoginReq_NetworkType)(0),      // 3: bs.client.LoginReq.NetworkType
	(LoginRsp_Result)(0),           // 4: bs.client.LoginRsp.Result
	(TestRouter_Result)(0),         // 5: bs.client.TestRouter.Result
	(LogoutRsp_LogoutReason)(0),    // 6: bs.client.LogoutRsp.LogoutReason
	(*LoginReq)(nil),               // 7: bs.client.LoginReq
	(*LoginRsp)(nil),               // 8: bs.client.LoginRsp
	(*TestRouter)(nil),             // 9: bs.client.TestRouter
	(*LogoutReq)(nil),              // 10: bs.client.LogoutReq
	(*LogoutRsp)(nil),              // 11: bs.client.LogoutRsp
	(*QueryFundReq)(nil),           // 12: bs.client.QueryFundReq
	(*QueryFundRsp)(nil),           // 13: bs.client.QueryFundRsp
	(*GetOnlineUserReq)(nil),       // 14: bs.client.GetOnlineUserReq
	(*GetOnlineUserRsp)(nil),       // 15: bs.client.GetOnlineUserRsp
	(*KickUserReq)(nil),            // 16: bs.client.KickUserReq
	(*KickUserRsp)(nil),            // 17: bs.client.KickUserRsp
	(*mytype.BaseInfo)(nil),        // 18: bs.types.BaseInfo
	(*mytype.BaseUserInfo)(nil),    // 19: bs.types.BaseUserInfo
	(*mytype.UserSessionInfo)(nil), // 20: bs.types.UserSessionInfo
	(*mytype.FundItem)(nil),        // 21: bs.types.FundItem
}
var file_protodefine_client_client_proto_depIdxs = []int32{
	18, // 0: bs.client.LoginReq.base:type_name -> bs.types.BaseInfo
	1,  // 1: bs.client.LoginReq.action_type:type_name -> bs.client.LoginReq.LoginAction
	2,  // 2: bs.client.LoginReq.client_os:type_name -> bs.client.LoginReq.ClientOS
	3,  // 3: bs.client.LoginReq.sp_id:type_name -> bs.client.LoginReq.NetworkType
	18, // 4: bs.client.LoginRsp.base:type_name -> bs.types.BaseInfo
	4,  // 5: bs.client.LoginRsp.login_result:type_name -> bs.client.LoginRsp.Result
	19, // 6: bs.client.LoginRsp.user_base_info:type_name -> bs.types.BaseUserInfo
	20, // 7: bs.client.LoginRsp.user_sesion_info:type_name -> bs.types.UserSessionInfo
	18, // 8: bs.client.TestRouter.base:type_name -> bs.types.BaseInfo
	5,  // 9: bs.client.TestRouter.login_result:type_name -> bs.client.TestRouter.Result
	19, // 10: bs.client.TestRouter.base_info:type_name -> bs.types.BaseUserInfo
	20, // 11: bs.client.TestRouter.session_info:type_name -> bs.types.UserSessionInfo
	18, // 12: bs.client.LogoutReq.base:type_name -> bs.types.BaseInfo
	18, // 13: bs.client.LogoutRsp.base:type_name -> bs.types.BaseInfo
	6,  // 14: bs.client.LogoutRsp.logout_reason:type_name -> bs.client.LogoutRsp.LogoutReason
	18, // 15: bs.client.QueryFundReq.base:type_name -> bs.types.BaseInfo
	18, // 16: bs.client.QueryFundRsp.base:type_name -> bs.types.BaseInfo
	21, // 17: bs.client.QueryFundRsp.fund_items:type_name -> bs.types.FundItem
	18, // 18: bs.client.GetOnlineUserReq.base:type_name -> bs.types.BaseInfo
	18, // 19: bs.client.GetOnlineUserRsp.base:type_name -> bs.types.BaseInfo
	18, // 20: bs.client.KickUserReq.base:type_name -> bs.types.BaseInfo
	18, // 21: bs.client.KickUserRsp.base:type_name -> bs.types.BaseInfo
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_protodefine_client_client_proto_init() }
func file_protodefine_client_client_proto_init() {
	if File_protodefine_client_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protodefine_client_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRouter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFundRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineUserRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodefine_client_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickUserRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protodefine_client_client_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protodefine_client_client_proto_goTypes,
		DependencyIndexes: file_protodefine_client_client_proto_depIdxs,
		EnumInfos:         file_protodefine_client_client_proto_enumTypes,
		MessageInfos:      file_protodefine_client_client_proto_msgTypes,
	}.Build()
	File_protodefine_client_client_proto = out.File
	file_protodefine_client_client_proto_rawDesc = nil
	file_protodefine_client_client_proto_goTypes = nil
	file_protodefine_client_client_proto_depIdxs = nil
}
